<Workspace Version="1.3.4.6666" X="-515.477948026548" Y="-2239.30270402654" zoom="0.696198762810391" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="0e4af332-b582-406d-8029-a2ceb709d2ab" type="PythonNodeModels.PythonNode" nickname="CreateParts" x="1339.63846259447" y="4292.0660079698" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="true" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script>import clr
clr.AddReference("System")
from System.Collections.Generic import List

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import PartUtils, LinkElementId

clr.AddReference("RevitServices")
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument

link = UnwrapElement(IN[0])
el_ref = UnwrapElement(IN[1])
LinkDoc = link.GetLinkDocument()
excepts = []

Lel_id = [r1.ElementId for r1 in el_ref]
eList = List[ElementId]()
[eList.Add(e) for id in Lel_id if PartUtils.AreElementsValidForCreateParts(doc,List[ElementId]([id]))]

if IN[2]:
	TransactionManager.Instance.EnsureInTransaction(doc)
	PartUtils.CreateParts(doc,eList)
	TransactionManager.Instance.ForceCloseTransaction()
else:
	for e in eList:
		try:
			TransactionManager.Instance.EnsureInTransaction(doc)
			PartUtils.CreateParts(doc,List[ElementId]([e]))
			TransactionManager.Instance.ForceCloseTransaction()
		except:
			excepts.append(e)
			
partsid = [PartUtils.GetAssociatedParts(doc, e, True, True) for e in eList]
parts = [doc.GetElement(i) for id in partsid for i in id]

OUT = excepts,parts</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.BoolSelector guid="ad2dfade-7395-449f-a282-2e2b8324899f" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="1026.17676328387" y="3873.12920055203" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Boolean>False</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <DSRevitNodesUI.Categories guid="87d020b1-7498-47b8-ae76-8a8787cf1fd2" type="DSRevitNodesUI.Categories" nickname="Categories" x="-464.154249362704" y="2212.02738388894" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="false" index="-1" />
    <DSRevitNodesUI.ElementsOfCategory guid="3f91da6d-4067-436c-88e2-2e453ac83f3e" type="DSRevitNodesUI.ElementsOfCategory" nickname="All Elements of Category" x="-243.634350808164" y="2219.77065920464" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
    </DSRevitNodesUI.ElementsOfCategory>
    <Prorubim.DS.Common.ForceChildrensEval guid="3359b0d1-ce0f-4c6b-b258-e0917ec8cf98" type="Prorubim.DS.Common.ForceChildrensEval" nickname="ForceChildrensEval" x="-462.466143893114" y="2385.14632944244" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="false">
      <PortInfo index="0" default="False" />
    </Prorubim.DS.Common.ForceChildrensEval>
    <PythonNodeModels.PythonNode guid="0cf9be23-768e-4171-bbbc-03183b6743fa" type="PythonNodeModels.PythonNode" nickname="PyS Get Revit Selection" x="-220.646219625864" y="2384.31274409245" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitServices')
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
import RevitServices
from RevitServices.Persistence import DocumentManager
from Autodesk.Revit.ApplicationServices import Application

reset = IN[0]

doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument
ids = uidoc.Selection.GetElementIds()

idd = [str(i) for i in ids]

if isinstance(idd, list) == True:
	elems = [doc.GetElement(ElementId(int(i))) for i in idd]
else:
	elems = doc.GetElement(ElementId(int(idd)))

OUT = elems
</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="84fbaafa-849d-486c-b9d8-2c8fb4df6076" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Parameters" x="1756.55205877941" y="3209.0081331594" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="RevitNodes.dll" function="Revit.Elements.Element.Parameters">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="461bb3d0-34c2-4cc4-887d-b5d28d54cf7d" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Geometry" x="807.439941469706" y="2599.3695660305" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.Geometry">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="b2b3e25f-0c50-4767-9ac0-f837e8620470" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.SetParameterByName" x="1166.35667551617" y="2621.55980654119" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.SetParameterByName@string,var">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="01eaf907-eb44-45b7-973d-d20cb566e2c7" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.GetParameterValueByName" x="2426.59568417896" y="3016.41389747665" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="RevitNodes.dll" function="Revit.Elements.Element.GetParameterValueByName@string">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <PythonNodeModels.PythonNode guid="69c9997e-9499-422c-a075-41bcdc4e84d4" type="PythonNodeModels.PythonNode" nickname="Parameters name from language" x="-283.665230592624" y="2637.73325147907" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="true" isPinned="true" inputcount="0">
      <Script>import clr
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager

uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application
lng = app.Language
rus = ["Тип","Имя семейства","Имя типа"]
enu = ["Type","Family name","Type name"]
out = []
if str(lng) == "Russian":
	out = rus
else:
	out = enu
#English_USA
#Russian
OUT = out</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="d2ac6ab2-846a-49e9-9501-ce2ad277d9e3" type="PythonNodeModels.PythonNode" nickname="Group.Members" x="-484.100715552504" y="2635.77599209978" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

groups = UnwrapElement(IN[0])
elementlist = list()
for item in groups:
	try:
		memberlist = list()
		for member in item.GetMemberIds():
			memberlist.append(item.Document.GetElement(member))
		elementlist.append(memberlist)
	except:
		elementlist.append(list())
OUT = elementlist</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.Filename guid="07bdd7a1-197b-4bbd-9297-9e8420d6c341" type="CoreNodeModels.Input.Filename" nickname="Путь к файлу Python:" x="-149.457762429799" y="3559.54167788709" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <System.String>.\element_to_parts.py</System.String>
      <HintPath>E:\Dyno\РАБОЧИЕ СКРИПТЫ\8. ЧАСТИ\element_to_parts.py</HintPath>
    </CoreNodeModels.Input.Filename>
    <PythonNodeModels.PythonStringNode guid="2612e793-7fd2-4590-849b-124d5022d48a" type="PythonNodeModels.PythonStringNode" nickname="Python Script From String" x="1288.2344104002" y="3664.47818637089" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
    </PythonNodeModels.PythonStringNode>
    <Prorubim.DS.Common.ForceChildrensEval guid="ee29e8ce-d5b7-4c6a-ab52-2b486572e603" type="Prorubim.DS.Common.ForceChildrensEval" nickname="ForceChildrensEval" x="107.603190817567" y="3552.95935564896" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
    </Prorubim.DS.Common.ForceChildrensEval>
    <PythonNodeModels.PythonNode guid="337cb8b9-e98d-4c1a-90f5-dfdb6079c8c9" type="PythonNodeModels.PythonNode" nickname="Regenerate()" x="50.3374986571464" y="2634.82826804956" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager


# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument


#The inputs to this node will be stored as a list in the IN variable.
list = IN[0]


if list:
	doc.Regenerate()
	out = "Regeneration complete"
else:
	out = "fail"
OUT = out</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="f014462e-a371-49af-9959-68286dcb7fe3" type="PythonNodeModels.PythonNode" nickname="Object.Members" x="53.4214217961564" y="2462.20901828976" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr

items = IN[0]
elementlist = list()

try:
	clr.AddReference('RevitAPI')
	from Autodesk.Revit.DB import *
	for item in items:
		elementlist.append(dir(UnwrapElement(item)))
except:
	for item in items:
		elementlist.append(dir(item))
OUT = elementlist</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="62113781-0a22-470f-88de-04dacd0d48c2" type="PythonNodeModels.PythonNode" nickname="FilteredElementCollector" x="6.33480516841632" y="2987.13335376289" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>if IN[1]:
	import clr
	
	# Import DocumentManager and TransactionManager
	clr.AddReference("RevitServices")
	import RevitServices
	from RevitServices.Persistence import DocumentManager
	
	
	# Import RevitAPI
	clr.AddReference("RevitAPI")
	import Autodesk
	from Autodesk.Revit.DB import *
	
	doc = DocumentManager.Instance.CurrentDBDocument
	uiapp = DocumentManager.Instance.CurrentUIApplication
	app = uiapp.Application
	
	from System.Collections.Generic import *
	
	
	#The inputs to this node will be stored as a list in the IN variable.
	dataEnteringNode = IN
	collector = FilteredElementCollector(doc)
	elements = collector.OfCategory(BuiltInCategory.OST_Views).ToElements()
	
	OUT = sheetInstances
else:
	OUT = "скрипт не выполнен"</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="611942e1-f523-4003-a05e-f24aa31a72bd" type="PythonNodeModels.PythonNode" nickname="Find file and import it!" x="625.505440961578" y="3523.46642224345" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import sys
sys.path.append('C:\Program Files (x86)\IronPython 2.7\Lib')
import codecs

try:
	filePath = IN[0]
	with codecs.open(filePath, 'rb', "utf-8") as inf:
		lines = inf.readlines()
	OUT = ''.join(lines)
except:
	OUT = "No file"</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="467c2534-aaab-4cec-b933-1292a99ea74f" type="PythonNodeModels.PythonNode" nickname="if" x="499.503278550406" y="2507.63468280345" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script>if IN[0]:
	OUT = UnwrapElement(IN[1])
else:
	OUT = UnwrapElement(IN[2])
</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="7e5ff7e7-32e2-4113-bd6f-a8d6e1cc35e3" type="PythonNodeModels.PythonNode" nickname="Som dir" x="48.3737705152064" y="3175.53064710591" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># -*- coding: utf-8 -*- 
#-----------------------Импоорт библиотек----------------------
import clr
clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes") 
import Revit
from Revit.Elements import *

clr.ImportExtensions(Revit.Elements) #ToDSType не работает без
clr.ImportExtensions(Revit.GeometryConversion) #ToXyz не работает без

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

#-----------------------ИМПОРТ БИБЛИОТЕК----------------------
"""-"""
#-----------------------ФУНКЦИИ----------------------

def __x__(x):
	x="x"
	return x
	
#-----------------------ФУНКЦИИ----------------------
"""-"""
#-----------------------АПИ ПАРАМЕТРЫ----------------------

doc = DocumentManager.Instance.CurrentDBDocument
#link_doc = UnwrapElement(IN[1])
#uiapp = DocumentManager.Instance.CurrentUIApplication
#app = uiapp.Application
#version = app.VersionNumber
#options = Autodesk.Revit.DB.SpatialElementBoundaryOptions()

#-----------------------АПИ ПАРАМЕТРЫ----------------------
"""-"""
#-----------------------РАБОЧИЕ ПАРАМЕТРЫ----------------------

test1 = UnwrapElement(IN[0])

#-----------------------РАБОЧИЕ ПАРАМЕТРЫ----------------------	
"""-"""
#-----------------------ТЕСТОВЫЕ ПАРАМЕТРЫ----------------------

test = []

#-----------------------ТЕСТОВЫЕ ПАРАМЕТРЫ----------------------
"""-"""
#-----------------------НАЧАЛО СКРИПТА----------------------

#TransactionManager.Instance.EnsureInTransaction(doc)
#TransactionManager.Instance.TransactionTaskDone()
#-----------------------КОНЕЦ СКРИПТА----------------------

OUT = dir(RevitServices.Persistence.DocumentManager.CurrentUIApplication)
</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.BoolSelector guid="10c200b0-109a-42fd-a5a0-f836bf180411" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="229.503278550406" y="2483.63468280345" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="03bc091c-561f-4ef7-9151-49fb4b74604b" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="242.743272145326" y="2602.82248647835" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="1;&#xA;2;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="9806f6f4-19ef-4763-aa2c-9e9fd5526a27" type="PythonNodeModels.PythonNode" nickname="ARRAY i LAMBDA" x="237.000503372436" y="2993.58931689413" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>from System import *
from System.Collections.Generic import List

ja_spisok = ["1","2","A","B"]

ja_spisok_spiskov = [["1","2"],["A","B"]]

ja_korteg_kortegey = (("1","2"),("A","B"))

ja_spisok_arrayof = []

for ja in ja_spisok_spiskov:
	ja_spisok_arrayof.append(Array[str](ja))

strArray = Array[Array[str]](ja_spisok_arrayof)

strArray2 = Array[Array[str]](ja_korteg_kortegey)

strArray3 = Array[Array[str]](tuple(tuple(x) for x in ja_spisok_spiskov))

f = lambda x: tuple(x)

strArray4 = Array[Array[str]](f(f(x) for x in ja_spisok_spiskov))

OUT = strArray4</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="62204e3a-e66a-4ae8-88d8-588af5cbe15f" type="PythonNodeModels.PythonNode" nickname="Pick object" x="257.911504917756" y="3183.3863255618" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Copyright(c) 2016, Dimitar Venkov
# @5devene, dimitar.ven@gmail.com

import clr

clr.AddReference("RevitAPIUI")
from  Autodesk.Revit.UI import *

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
doc = DocumentManager.Instance.CurrentDBDocument
uidoc=DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

sel1 = uidoc.Selection
ot1 = Selection.ObjectType.Element
ot2 = Selection.ObjectType.LinkedElement
li_ref = sel1.PickObject(ot1, "Select a link instance first.")
el_ref = sel1.PickObject(ot2, "Pick a linked element.")
Link1 = doc.GetElement(li_ref.ElementId)
LinkDoc = Link1.GetLinkDocument()
OUT = LinkDoc.GetElement(el_ref.LinkedElementId).ToDSType(True)</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.StringInput guid="d455c978-6e3e-4f98-8525-f40941d42b68" type="CoreNodeModels.Input.StringInput" nickname="Список категорий" x="1554.88684930135" y="2634.49869769424" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.String>Части, Окна, Панели витража, Несущие колонны, Ограждение</System.String>
      <System.String value="Части, Окна, Панели витража, Несущие колонны, Ограждение" />
    </CoreNodeModels.Input.StringInput>
    <CoreNodeModels.Input.StringInput guid="a4980370-91ce-47ba-ab99-4b4c355d508c" type="CoreNodeModels.Input.StringInput" nickname="Список категорий" x="1554.2241305024" y="2560.34113520252" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.String>Части, Стены</System.String>
      <System.String value="Части, Стены" />
    </CoreNodeModels.Input.StringInput>
    <PythonNodeModels.PythonNode guid="489f88df-5ef5-42e4-bc2b-a8cd1fe7fa80" type="PythonNodeModels.PythonNode" nickname="Python Script - Фильтруем элементы по именам категорий" x="1887.33074752912" y="2529.84574335924" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import BuiltInParameter

elements = UnwrapElement(IN[0])
cats = UnwrapElement(IN[1])

filtred_elements = [e for e in elements if e.get_Parameter(BuiltInParameter.ELEM_CATEGORY_PARAM).AsValueString() in cats]
filtred_cats = [fe.get_Parameter(BuiltInParameter.ELEM_CATEGORY_PARAM).AsValueString() if not fe.get_Parameter(BuiltInParameter.DPART_ORIGINAL_CATEGORY) else fe.get_Parameter(BuiltInParameter.DPART_ORIGINAL_CATEGORY).AsString() for fe in filtred_elements ]

#OUT = [e for e in elements if e.get_Parameter(BuiltInParameter.ELEM_CATEGORY_PARAM).AsValueString() in cats]
OUT = (filtred_elements,filtred_cats)</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="b7386b5a-3bfa-46f9-a6e3-e9d153da88ac" type="PythonNodeModels.PythonNode" nickname="Som workset" x="553.500389111728" y="2783.69601227951" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># -*- coding: utf-8 -*- 
#-----------------------Импоорт библиотек----------------------
import clr
clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes") 
import Revit
from Revit.Elements import *

clr.ImportExtensions(Revit.Elements) #ToDSType не работает без
clr.ImportExtensions(Revit.GeometryConversion) #ToXyz не работает без

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

doc = DocumentManager.Instance.CurrentDBDocument
wt = doc.GetWorksetTable()
walls = UnwrapElement(IN[0])

worksets_name = [wt.GetWorkset(e.WorksetId).Name for e in walls]
worksets = [wt.GetWorkset(e.WorksetId) for e in walls]

OUT = worksets,worksets_name
</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="27de4071-76c9-4444-97e9-3b63e6707e87" type="PythonNodeModels.PythonNode" nickname="LinkElemId By Tag" x="728.671501446617" y="2790.46485743336" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script># -*- coding: utf-8 -*- 
#-----------------------Импоорт библиотек----------------------
import clr
clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes") 
import Revit
from Revit.Elements import *

clr.ImportExtensions(Revit.Elements) #ToDSType не работает без
clr.ImportExtensions(Revit.GeometryConversion) #ToXyz не работает без

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

import System
clr.AddReference('System')
from System.Collections.Generic import List

#-----------------------ИМПОРТ БИБЛИОТЕК----------------------
"""-"""
#-----------------------ФУНКЦИИ----------------------

def __x__(x):
	x="x"
	return x
	
#-----------------------ФУНКЦИИ----------------------
"""-"""
#-----------------------АПИ ПАРАМЕТРЫ----------------------

#doc = DocumentManager.Instance.CurrentDBDocument
#link_doc = UnwrapElement(IN[1])
#uiapp = DocumentManager.Instance.CurrentUIApplication
#app = uiapp.Application
#version = app.VersionNumber
#options = Autodesk.Revit.DB.SpatialElementBoundaryOptions()

#g_id_list = []
#g_id_list.append(ElementId(group))

#bxList = List[ElementId](g_id_list) #АЙ ЛИСТ КОЛЕКТИОН
#move = Transform.CreateTranslation(-wall.Orientation*2) #смещение
#cl.CreateTransformed(move)

#-----------------------АПИ ПАРАМЕТРЫ----------------------
"""-"""
#-----------------------РАБОЧИЕ ПАРАМЕТРЫ----------------------
link_inst = UnwrapElement(IN[0])
loc_elem = UnwrapElement(IN[1])

doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIDocument

link_doc = link_inst.GetLinkDocument()
#walls = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Walls).ToElements()
link_tags = FilteredElementCollector(doc).OfClass(IndependentTag)

test = []
tag_ids = []
linked_ids = []
linkins_ids = []
host_ids = []

opt = Options()
opt.ComputeReferences = True

view = doc.ActiveView

elems_list = []

for w in link_tags:
	tag_elem_id = w.TaggedElementId
	#tag_ids.append(w.TaggedLocalElementId)
	linked_ids.append(tag_elem_id.LinkedElementId)
	#linkins_ids.append(tag_elem_id.LinkInstanceId.ToString())
	#host_ids.append(tag_elem_id.HostElementId)
	
#link_elem_geom = link_doc.GetElement(linked_ids[0]).get_Geometry(opt)#.GetReferences()
#elem_geom2 = doc.GetElement(walls[4].Id).Geometry[opt]
for g in linked_ids:
	elems_list.append(link_doc.GetElement(g))
	
#geom_centr_point = link_elem_geom.ComputeCentroid()
#uidoc.ShowElements(link_elem)
#ref_insp = ReferenceIntersector(linked_ids[0], FindReferenceTarget.Element, view )
#ref_contx = ref_insp.FindNearest(test[0],test[0].Multiply(3))
elem = elems_list[1]

if elem.Location.GetType() == LocationCurve:
	location = elem.Location.Curve.Evaluate(0.5, True)
elif elem.Location.GetType() == LocationPoint:
	location = elem.Location.Point
ref = Reference(elem).CreateLinkReference(link_inst)

TransactionManager.Instance.EnsureInTransaction(doc)

"""#2019
newtag = IndependentTag.Create(doc,view.Id,ref,True,TagMode.TM_ADDBY_CATEGORY,TagOrientation.Horizontal,location)
"""
#2017 не работает для связанных файлов
newtag = doc.Create.NewTag(view, elem, False, TagMode.TM_ADDBY_CATEGORY, TagOrientation.Horizontal, location)

TransactionManager.Instance.EnsureInTransaction(doc)

#TransactionManager.Instance.TransactionTaskDone()
#newtag= doc.NewTag(view,elems_list[0],True,TagMode.TM_ADDBY_CATEGORY,TagOrientation.Horizontal,centr)


OUT = newtag</Script>
    </PythonNodeModels.PythonNode>
    <Prorubim.DS.Common.ForceChildrensEval guid="36453f34-0f59-498a-bd18-e9cb130de834" type="Prorubim.DS.Common.ForceChildrensEval" nickname="ForceChildrensEval" x="1125.03301863227" y="3028.26148242268" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="false">
      <PortInfo index="0" default="False" />
    </Prorubim.DS.Common.ForceChildrensEval>
    <PythonNodeModels.PythonNode guid="dc82912f-3990-41b4-ac46-75ffd86754e1" type="PythonNodeModels.PythonNode" nickname="PyS Get Revit Selection" x="1366.85294289952" y="3027.42789707269" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitServices')
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
import RevitServices
from RevitServices.Persistence import DocumentManager
from Autodesk.Revit.ApplicationServices import Application

reset = IN[0]

doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument
ids = uidoc.Selection.GetElementIds()

idd = [str(i) for i in ids]

if isinstance(idd, list) == True:
	elems = [doc.GetElement(ElementId(int(i))) for i in idd]
else:
	elems = doc.GetElement(ElementId(int(idd)))

OUT = elems
</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="001d2a93-89be-4dc8-8c55-4b7477065204" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2096" y="3167" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;Семейство и типоразмер&quot;;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="539e867b-4add-445b-afd8-dbed33afb001" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Parameters" x="2473.94616374957" y="3271.59794571819" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="RevitNodes.dll" function="Revit.Elements.Element.Parameters">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="f08cfe1e-3127-456e-9ebb-beac9132a9a3" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.GetParameterValueByName" x="3085.66358105767" y="3019.1764800832" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true" assembly="RevitNodes.dll" function="Revit.Elements.Element.GetParameterValueByName@string">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="53703d4c-ee84-46bb-9874-7981a2e8aab8" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2755.06789687871" y="3169.76258260655" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;Категория&quot;;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="794db73e-b57e-4cde-b89d-b1895e85e28a" type="PythonNodeModels.PythonNode" nickname="PyS Get Revit Selection" x="617.307348763267" y="3638.98420374546" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitServices')
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import ElementId
import RevitServices
from RevitServices.Persistence import DocumentManager
from Autodesk.Revit.ApplicationServices import Application

reset = IN[0]

doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument
ids = uidoc.Selection.GetElementIds()

idd = [str(i) for i in ids]

if isinstance(idd, list) == True:
	elems = [doc.GetElement(ElementId(int(i))) for i in idd]
else:
	elems = doc.GetElement(ElementId(int(idd)))

OUT = elems
</Script>
    </PythonNodeModels.PythonNode>
    <Prorubim.DS.Common.ForceChildrensEval guid="1dbbd61b-7683-4f23-945a-6effcb82804d" type="Prorubim.DS.Common.ForceChildrensEval" nickname="ForceChildrensEval" x="-168.19668441642" y="4074.71244086624" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
    </Prorubim.DS.Common.ForceChildrensEval>
    <PythonNodeModels.PythonNode guid="2e71bb10-2ab5-4ae4-bc36-6b6564f0a098" type="PythonNodeModels.PythonNode" nickname="PyS Get Revit Selection" x="161.166104573768" y="4083.60584048547" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitServices')
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
import RevitServices
from RevitServices.Persistence import DocumentManager
from Autodesk.Revit.ApplicationServices import Application

reset = IN[0]

doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument
ids = uidoc.Selection.GetElementIds()

idd = [str(i) for i in ids]

if isinstance(idd, list) == True:
	elems = [doc.GetElement(ElementId(int(i))) for i in idd]
else:
	elems = doc.GetElement(ElementId(int(idd)))

OUT = elems
</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="be973a1a-21b2-4cf3-96b0-64cc8786a9c3" type="PythonNodeModels.PythonNode" nickname="type change" x="398.831038676359" y="4072.61285507376" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference("System")
from System.Collections.Generic import List

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

clr.AddReference("RevitServices")
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

elems = UnwrapElement(IN[0])

doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument

test = []
list = List[HostObjAttributes]()

for e in elems:
	cs = e.GetCompoundStructure().GetLayers()
	for i,c in enumerate(cs):
		if i == 0:
			c
		if doc.GetElement(c.MaterialId).Name == "Воздух":
			#cs.DeleteLayer(i)
			test.append([i,doc.GetElement(c.MaterialId).Name])
OUT = test
</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="825334e2-48f8-4408-a548-95ee84f4d968" type="PythonNodeModels.PythonNode" nickname="WarningSwallower ( IFailuresProcessor )" x="60.0868773437661" y="3892.18053526872" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># -*- coding: utf-8 -*- 
import sys 
sys.path.append("C:\Program Files (x86)\IronPython 2.7\Lib")

import clr
clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import IFailuresProcessor, FailureResolutionType, BuiltInFailures, FailureSeverity, FailureProcessingResult


clr.AddReference('RevitServices')
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

import System
from System import Type,Text,IO
clr.AddReference('System')
from System.Collections.Generic import List

import traceback

file_path = 'C:\\temp\\warning_log.txt'
current_doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application
#fail_def_reg = app.GetFailureDefinitionRegistry()

def flatten(container):
    for i in container:
        if isinstance(i, (list,tuple)):
            for j in flatten(i):
                yield j
        else:
            yield i
            
def combine_results(list):
	str_list = [str(i) for i in list]
	return ", ".join(str_list)
	
def LogSave(info):
	IO.File.AppendAllLines(file_path, flatten(info), Text.Encoding.Unicode)	            
            
def FailureResolutionTypes():
	fail_res_types = []
	fail_res_types.append(FailureResolutionType.Invalid)
	fail_res_types.append(FailureResolutionType.Default)
	fail_res_types.append(FailureResolutionType.CreateElements)
	fail_res_types.append(FailureResolutionType.DeleteElements)
	fail_res_types.append(FailureResolutionType.SkipElements)
	fail_res_types.append(FailureResolutionType.MoveElements)
	fail_res_types.append(FailureResolutionType.FixElements)
	fail_res_types.append(FailureResolutionType.DetachElements)
	fail_res_types.append(FailureResolutionType.QuitEditMode)
	fail_res_types.append(FailureResolutionType.UnlockConstraints)
	fail_res_types.append(FailureResolutionType.SetValue)
	fail_res_types.append(FailureResolutionType.SaveDocument)
	fail_res_types.append(FailureResolutionType.ShowElements)
	fail_res_types.append(FailureResolutionType.Others)
	return fail_res_types
	
def FailListDict():
	clr_binf_type = clr.GetClrType(BuiltInFailures) #BINGO
	clr_list_of_binf_fails = clr_binf_type.GetNestedTypes()
	#Словарь BuiltInFailures где key: имя класса ошибки + свойство ошибки; value: FailureDefinitionId 
	dict_binf_and_id = {"{0}.{1}".format(binf.FullName.replace("+","."),binfprop.Name):binfprop.GetGetMethod().Invoke(binf, None) for binf in clr_list_of_binf_fails for binfprop in binf.GetProperties()}
	return dict_binf_and_id

def fail_stat(fail_m):
	result = []
	ad_ids = [eid.IntegerValue for eid in fail_m.GetAdditionalElementIds()]
	fail_ids = [eid.IntegerValue for eid in fail_m.GetFailingElementIds()]
	has_res_of_type = ["{0} = {1}".format(str(res_type),str(fail_m.HasResolutionOfType(res_type))) for res_type in FailureResolutionTypes() if fail_m.HasResolutionOfType(res_type)]
	result.append("***")
	#result.append(fail_m.HasResolutions())# 0
	result.append("FailureType = {0}".format(fail_m.GetSeverity()))# 1
	#result.append(fail_m.GetDescriptionText())# 2
	#result.append(fail_m.GetDefaultResolutionCaption())# 3
	if fail_m.HasResolutions():
		result.append("CurrentResolutionType = {}".format(fail_m.GetCurrentResolutionType()))# 4
	else:
		result.append("CurrentResolutionType = {}".format("does not have any resolutions"))
	#result.append(fail_m.GetNumberOfResolutions())# 5
	result.append(fail_m.GetFailureDefinitionId().Guid)
	#result.append(fail_def_reg.FindFailureDefinition(fail_m.GetFailureDefinitionId()))# 6
	result.append("AdditionalElementIds: {}".format(ad_ids))# 7
	result.append("FailingElementIds: {}".format(fail_ids))# 8 
	result.append(has_res_of_type)# 9
	result.append([(item[0],str(item[1].Guid.ToString())) for item in FailListDict().items() if item[1] == fail_m.GetFailureDefinitionId()])
	result.append("***")
	string_list = [str(r) for r in result]
	return string_list

class WarningSwallower_BC(IFailuresProcessor):
	def ProcessFailures(self, failuresAccessor):
		fail_messages = failuresAccessor.GetFailureMessages() #IList&lt;FailureMessageAccessor&gt;
		LogFails = []
		try:
			for fail_m in fail_messages:
				info = fail_stat(fail_m)
				"""if fail_m.GetFailureDefinitionId() == Autodesk.Revit.DB.BuiltInFailures.CurtainWallFailures.DependentGridlineMayBeDeleted:
					#fail_m.SetCurrentResolutionType(FailureResolutionType.DeleteElements)
					failuresAccessor.ResolveFailure(fail_m)
					info = fail_stat(fail_m)
					LogSave(info)
					failuresAccessor.DeleteWarning(fail_m)
					return FailureProcessingResult.ProceedWithCommit
				if fail_m.GetFailureDefinitionId() == Autodesk.Revit.DB.BuiltInFailures.OverlapFailures.WallsOverlap:
					#failuresAccessor.DeleteElements(fail_m.GetFailingElementIds())
					#info = fail_stat(fail_m)
					LogSave(info)
					failuresAccessor.DeleteWarning(fail_m)
					return FailureProcessingResult.ProceedWithRollBack"""
				#elif fail_m.GetFailureDefinitionId() == Autodesk.Revit.DB.BuiltInFailures.OverlapFailures.DuplicateInstances:
				#	LogSave(info)
				#	return FailureProcessingResult.Continue
				if fail_m.GetSeverity() == FailureSeverity.Warning:
					failuresAccessor.DeleteWarning(fail_m)
					LogSave(info)
					return FailureProcessingResult.Continue
				else:
					failuresAccessor.ResolveFailure(fail_m)
					LogSave(info)
					return FailureProcessingResult.ProceedWithCommit
		except Exception as e:
			tb2 = sys.exc_info()[2]
			line = tb2.tb_lineno
			LogSave(["Code error on line: {0} Has failure: {1}".format(str(line),str(e))])
	def Dismiss(self, current_doc):
		pass	
	
app.RegisterFailuresProcessor(WarningSwallower_BC())

OUT = "WarningSwallower_ON"

</Script>
    </PythonNodeModels.PythonNode>
    <Prorubim.DS.Common.ForceChildrensEval guid="1b710c4b-e4f6-44af-b473-59067f993681" type="Prorubim.DS.Common.ForceChildrensEval" nickname="ForceChildrensEval" x="-200.207793122934" y="3893.85059579514" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="false">
      <PortInfo index="0" default="False" />
    </Prorubim.DS.Common.ForceChildrensEval>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="ad2dfade-7395-449f-a282-2e2b8324899f" start_index="0" end="0e4af332-b582-406d-8029-a2ceb709d2ab" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ad2dfade-7395-449f-a282-2e2b8324899f" start_index="0" end="2612e793-7fd2-4590-849b-124d5022d48a" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="87d020b1-7498-47b8-ae76-8a8787cf1fd2" start_index="0" end="3f91da6d-4067-436c-88e2-2e453ac83f3e" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3359b0d1-ce0f-4c6b-b258-e0917ec8cf98" start_index="0" end="0cf9be23-768e-4171-bbbc-03183b6743fa" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="01eaf907-eb44-45b7-973d-d20cb566e2c7" start_index="0" end="539e867b-4add-445b-afd8-dbed33afb001" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="01eaf907-eb44-45b7-973d-d20cb566e2c7" start_index="0" end="f08cfe1e-3127-456e-9ebb-beac9132a9a3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="07bdd7a1-197b-4bbd-9297-9e8420d6c341" start_index="0" end="ee29e8ce-d5b7-4c6a-ab52-2b486572e603" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ee29e8ce-d5b7-4c6a-ab52-2b486572e603" start_index="0" end="611942e1-f523-4003-a05e-f24aa31a72bd" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ee29e8ce-d5b7-4c6a-ab52-2b486572e603" start_index="0" end="794db73e-b57e-4cde-b89d-b1895e85e28a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="611942e1-f523-4003-a05e-f24aa31a72bd" start_index="0" end="2612e793-7fd2-4590-849b-124d5022d48a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="10c200b0-109a-42fd-a5a0-f836bf180411" start_index="0" end="467c2534-aaab-4cec-b933-1292a99ea74f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="03bc091c-561f-4ef7-9151-49fb4b74604b" start_index="0" end="467c2534-aaab-4cec-b933-1292a99ea74f" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="03bc091c-561f-4ef7-9151-49fb4b74604b" start_index="1" end="467c2534-aaab-4cec-b933-1292a99ea74f" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a4980370-91ce-47ba-ab99-4b4c355d508c" start_index="0" end="489f88df-5ef5-42e4-bc2b-a8cd1fe7fa80" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="36453f34-0f59-498a-bd18-e9cb130de834" start_index="0" end="dc82912f-3990-41b4-ac46-75ffd86754e1" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="dc82912f-3990-41b4-ac46-75ffd86754e1" start_index="0" end="84fbaafa-849d-486c-b9d8-2c8fb4df6076" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="dc82912f-3990-41b4-ac46-75ffd86754e1" start_index="0" end="01eaf907-eb44-45b7-973d-d20cb566e2c7" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="001d2a93-89be-4dc8-8c55-4b7477065204" start_index="0" end="01eaf907-eb44-45b7-973d-d20cb566e2c7" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="53703d4c-ee84-46bb-9874-7981a2e8aab8" start_index="0" end="f08cfe1e-3127-456e-9ebb-beac9132a9a3" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="794db73e-b57e-4cde-b89d-b1895e85e28a" start_index="0" end="2612e793-7fd2-4590-849b-124d5022d48a" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1dbbd61b-7683-4f23-945a-6effcb82804d" start_index="0" end="2e71bb10-2ab5-4ae4-bc36-6b6564f0a098" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2e71bb10-2ab5-4ae4-bc36-6b6564f0a098" start_index="0" end="be973a1a-21b2-4cf3-96b0-64cc8786a9c3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1b710c4b-e4f6-44af-b473-59067f993681" start_index="0" end="825334e2-48f8-4408-a548-95ee84f4d968" end_index="0" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="af53a185-c71d-4cf5-b15c-d00cdf971d91" text="ВСЁ ОСТАЛЬНОЕ" x="185.029581827037" y="3390.44221460903" />
    <Dynamo.Graph.Notes.NoteModel guid="8a5bdd6c-9618-42f3-bb9d-f2391f6fca14" text="GUIDELINES" x="-648.456455193464" y="818.698649684443" />
    <Dynamo.Graph.Notes.NoteModel guid="e9dac3b0-a9d5-4749-992f-a0024d7ab06e" text="ЭЛЕМЕНТЫ УПРАВЛЕНИЯ" x="-311.462839612554" y="1070.21271054154" />
    <Dynamo.Graph.Notes.NoteModel guid="f1201c74-d958-4c67-a1a1-6a30c2385466" text="ПОЛУЧАЕМ ДАННЫЕ ИЗ РЕВИТ и других источников" x="-630.035659284434" y="1078.97814781918" />
    <Dynamo.Graph.Notes.NoteModel guid="a5e5a03e-b0bf-449f-8da8-2f78598b7d16" text="ПЕРЕМЕННЫЕ ЗНАЧЕНИЯ" x="-90.4822230419336" y="1069.09829636887" />
    <Dynamo.Graph.Notes.NoteModel guid="b500b13b-5286-43b3-aa11-2cafa8a6ed58" text="ПРОВЕРОЧНЫЕ НОДЫ" x="167.691313231726" y="1070.80865305129" />
    <Dynamo.Graph.Notes.NoteModel guid="be1dc185-2619-4c1c-9a5a-355986397752" text="ИСПОЛНИТЕЛЬНЫЕ НОДЫ " x="157.408023013756" y="1372.16208201007" />
    <Dynamo.Graph.Notes.NoteModel guid="42f3771f-772f-4347-b36c-30f250d241b6" text="ЭЛЕМЕНТЫ УПРАВЛЕНИЯ" x="-311.256194136884" y="1362.9247708601" />
    <Dynamo.Graph.Notes.NoteModel guid="0aa78807-aa21-4829-b98b-cb22d93816a5" text="ПЕРЕМЕННЫЕ ЗНАЧЕНИЯ" x="-90.2755775662636" y="1361.81035668743" />
    <Dynamo.Graph.Notes.NoteModel guid="38c90668-4ad0-4370-a024-30715ed30234" text="ПРОВЕРОЧНЫЕ НОДЫ" x="387.760160753016" y="1069.69423887862" />
    <Dynamo.Graph.Notes.NoteModel guid="607953d2-c77d-4318-a8c8-b09febe9ffa1" text="КОНСОЛИДАЦИЯ И СЛОЖНЫЕ ОБРАБОТКИ" x="661.029043450263" y="1554.9615514474" />
    <Dynamo.Graph.Notes.NoteModel guid="d04cfc9f-7ede-447e-b47a-e5aee29c7137" text="КОНСОЛИДАЦИЯ И СЛОЖНЫЕ ОБРАБОТКИ" x="144.471627679006" y="1554.21686463457" />
    <Dynamo.Graph.Notes.NoteModel guid="90c700df-6eb7-4fe8-95b4-1a500eba165b" text="ПЕРЕДАЁМ ИНФОРМАЦИЮ В РЕВИТ" x="652.214905979641" y="1080.42532867585" />
    <Dynamo.Graph.Notes.NoteModel guid="8a4c3396-5563-4d1e-b4bb-ba596e6cd12b" text="УСЛОЖНЕННЫЕ КОНСТРУКЦИИ" x="702.111292551092" y="1768.31103075377" />
    <Dynamo.Graph.Notes.NoteModel guid="c66a4669-9657-4121-96e5-be1ce5e31b57" text="УСЛОЖНЕНЫЕ КОНСТРУКЦИИ" x="136.171370104986" y="1765.1173244902" />
    <Dynamo.Graph.Notes.NoteModel guid="0a677ff2-0086-411a-9ed3-3717483ec712" text="Python" x="-282.339900181034" y="1679.85236834846" />
    <Dynamo.Graph.Notes.NoteModel guid="9518d795-d62b-4e7b-9218-0ac60d43db06" text="Python" x="-61.3592836104137" y="1678.73795417579" />
    <Dynamo.Graph.Notes.NoteModel guid="a998a5a6-6772-4b8c-852f-ecb4b1e904a4" text="Py - files" x="-349.661560565784" y="1915.16187719942" />
    <Dynamo.Graph.Notes.NoteModel guid="0d378ead-7742-403b-94d6-978ab4a0e662" text="Py - files" x="-52.9911268959536" y="1913.01061621717" />
    <Dynamo.Graph.Notes.NoteModel guid="e9242f0c-541f-4538-8722-c10a2d00cce7" text="ИСПОЛНИТЕЛЬНЫЕ НОДЫ" x="774.046371557675" y="1371.04766783739" />
    <Dynamo.Graph.Notes.NoteModel guid="34c25011-bcd8-47be-abb7-46922e375295" text="ВСЁ ОСТАЛЬНОЕ" x="905.863951868448" y="1977.49989379931" />
    <Dynamo.Graph.Notes.NoteModel guid="1ea275bb-9da7-405e-b5ed-b2b672347ff5" text="ЗАПАСНЫЕ" x="155.693997302306" y="2084.2498640897" />
    <Dynamo.Graph.Notes.NoteModel guid="eaf7e58a-e077-4b3f-9611-934100754bdb" text="ПЕРЕДАЁМ ИНФОРМАЦИЮ ЕЩЁ КУДА-ТО" x="1052.95147219153" y="1080.60133355756" />
    <Dynamo.Graph.Notes.NoteModel guid="7ac628d0-e262-44f2-ba94-eec3586da941" text="ДОПОЛНИТЕЛЬНЫЕ. Градации серово по важности, темнее - важнее" x="554.493269677202" y="2093.13290643558" />
    <Dynamo.Graph.Notes.NoteModel guid="3ba0e326-fdba-463d-a5c1-316bbc8a94e7" text="GUIDELINES" x="1280.39960742643" y="817.154699227129" />
  </Notes>
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="95fae443-4c8d-4aa4-9619-30bbf1d8a32a" annotationText="ПОЛУЧАЕМ ДАННЫЕ" left="-640.035659284434" top="982.97814781918" width="264" height="155" fontSize="36" InitialTop="1078.97814781918" InitialHeight="140" TextblockHeight="86" backgrouund="#FFB9F9E1">
      <Models ModelGuid="f1201c74-d958-4c67-a1a1-6a30c2385466" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="222a8719-52f1-437b-8403-40b1ee10acd0" annotationText="ЭЛЕМЕНТЫ УПРАВЛЕНИЯ" left="-321.462839612554" top="944.09829636887" width="401.98061657062" height="170.11441417267" fontSize="48" InitialTop="1069.09829636887" InitialHeight="141.114414172673" TextblockHeight="115" backgrouund="#FFFF7BAC">
      <Models ModelGuid="a5e5a03e-b0bf-449f-8da8-2f78598b7d16" />
      <Models ModelGuid="e9dac3b0-a9d5-4749-992f-a0024d7ab06e" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="59fb9dc5-6cc7-443c-b6a1-6462e44e76e0" annotationText="ЭЛЕМЕНТЫ УПРАВЛЕНИЯ&#xD;&#xA;2 УРОВЕНЬ" left="-321.256194136884" top="1178.81035668743" width="401.98061657062" height="228.11441417267" fontSize="48" InitialTop="1361.81035668743" InitialHeight="141.114414172673" TextblockHeight="173" backgrouund="#FFFFB8D8">
      <Models ModelGuid="0aa78807-aa21-4829-b98b-cb22d93816a5" />
      <Models ModelGuid="42f3771f-772f-4347-b36c-30f250d241b6" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="7a791282-248e-4fbf-a36b-f84dbabc8cbd" annotationText="ПРОВЕРОЧНЫЕ НОДЫ" left="157.691313231726" top="944.69423887862" width="384.06884752129" height="170.11441417267" fontSize="48" InitialTop="1069.69423887862" InitialHeight="141.114414172673" TextblockHeight="115" backgrouund="#FF71C6A8">
      <Models ModelGuid="38c90668-4ad0-4370-a024-30715ed30234" />
      <Models ModelGuid="b500b13b-5286-43b3-aa11-2cafa8a6ed58" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="2df232ad-03bf-4785-96f1-d430af47aa15" annotationText="КЛЮЧЕВЫЕ МОМЕНТЫ РАБОТЫ 2" left="126.171370104986" top="1697.1173244902" width="783.939922446106" height="115.19370626357" fontSize="48" InitialTop="1765.1173244902" InitialHeight="143.193706263564" TextblockHeight="58" backgrouund="#FFFFC999">
      <Models ModelGuid="8a4c3396-5563-4d1e-b4bb-ba596e6cd12b" />
      <Models ModelGuid="c66a4669-9657-4121-96e5-be1ce5e31b57" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="b723e44b-8108-4b73-b547-f1fbc09c6a9a" annotationText="Python ноды" left="-292.339900181034" top="1610.73795417579" width="297.98061657062" height="113.11441417267" fontSize="48" InitialTop="1678.73795417579" InitialHeight="141.114414172673" TextblockHeight="58" backgrouund="#FFBB87C6">
      <Models ModelGuid="9518d795-d62b-4e7b-9218-0ac60d43db06" />
      <Models ModelGuid="0a677ff2-0086-411a-9ed3-3717483ec712" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="f4031ce5-f11a-4696-ae72-160a53f421d8" annotationText="КЛЮЧЕВЫЕ МОМЕНТЫ РАБОТЫ 1" left="134.471627679006" top="1486.21686463457" width="801.557415771257" height="112.74468681283" fontSize="48" InitialTop="1554.21686463457" InitialHeight="140.74468681283" TextblockHeight="58" backgrouund="#FFFFAA45">
      <Models ModelGuid="607953d2-c77d-4318-a8c8-b09febe9ffa1" />
      <Models ModelGuid="d04cfc9f-7ede-447e-b47a-e5aee29c7137" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="01075653-25ac-49b2-a17a-55a441841764" annotationText="ИСПОЛНИТЕЛЬНЫЕ НОДЫ (фильтрование, подбор, списки и т.д.)" left="147.408023013756" top="1188.04766783739" width="806.638348543919" height="228.11441417268" fontSize="48" InitialTop="1371.04766783739" InitialHeight="141.114414172674" TextblockHeight="173" backgrouund="#FFC1D676">
      <Models ModelGuid="e9242f0c-541f-4538-8722-c10a2d00cce7" />
      <Models ModelGuid="be1dc185-2619-4c1c-9a5a-355986397752" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="a4ff3863-a90d-4516-ab5a-61f227950cab" annotationText="ПЕРЕДАЁМ ИНФОРМАЦИЮ" left="642.214905979641" top="1012.42532867585" width="675.736566211889" height="112.17600488171" fontSize="48" InitialTop="1080.42532867585" InitialHeight="140.176004881704" TextblockHeight="58" backgrouund="#FF48B9FF">
      <Models ModelGuid="eaf7e58a-e077-4b3f-9611-934100754bdb" />
      <Models ModelGuid="90c700df-6eb7-4fe8-95b4-1a500eba165b" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="aa0e6533-d004-4484-bec0-3360cf45b326" annotationText="ЗАПАСНЫЕ ВАРИАНТЫ, ДОПОЛНИТЕЛЬНЫЕ ОПЦИИ" left="145.693997302306" top="1959.2498640897" width="668.799272374896" height="192.88304234588" fontSize="48" InitialTop="2084.2498640897" InitialHeight="148.883042345883" TextblockHeight="115" backgrouund="#FFD8D8D8">
      <Models ModelGuid="7ac628d0-e262-44f2-ba94-eec3586da941" />
      <Models ModelGuid="1ea275bb-9da7-405e-b5ed-b2b672347ff5" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="93e916b9-b7e9-42c1-bacb-97ae5d0e23ca" annotationText="Запуск питона из внешнего файла" left="-359.661560565784" top="1788.01061621717" width="381.67043366983" height="171.15126098225" fontSize="48" InitialTop="1913.01061621717" InitialHeight="142.151260982251" TextblockHeight="115" backgrouund="#FFD4B6DB">
      <Models ModelGuid="0d378ead-7742-403b-94d6-978ab4a0e662" />
      <Models ModelGuid="a998a5a6-6772-4b8c-852f-ecb4b1e904a4" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="3da4b941-751d-4495-a66b-d140df7b33b3" annotationText="&lt;Нажмите здесь, чтобы изменить заголовок группы&gt;" left="-474.154249362704" top="2130.02738388894" width="414.51989855454" height="182.7432753157" fontSize="30" InitialTop="2212.02738388894" InitialHeight="130.743275315698" TextblockHeight="72" backgrouund="#FFB9F9E1">
      <Models ModelGuid="87d020b1-7498-47b8-ae76-8a8787cf1fd2" />
      <Models ModelGuid="3f91da6d-4067-436c-88e2-2e453ac83f3e" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="2f1d093b-791b-4008-b458-b30215dc4cd4" annotationText="ПРИМЕЧАНИЯ ПО ЦВЕТОВОЙ ГРУППИРОВКЕ" left="-658.456455193464" top="692.154699227129" width="2032.85606261989" height="170.543950457314" fontSize="96" InitialTop="817.154699227129" InitialHeight="141.543950457314" TextblockHeight="115" backgrouund="#FFFFAA45">
      <Models ModelGuid="8a5bdd6c-9618-42f3-bb9d-f2391f6fca14" />
      <Models ModelGuid="3ba0e326-fdba-463d-a5c1-316bbc8a94e7" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="9cfd3a61-7cb1-42c2-ae2a-971a18bb688f" annotationText="Get Revit Selection:" left="-472.466143893114" top="2354.31274409245" width="414.81992426725" height="123.83358534999" fontSize="14" InitialTop="2384.31274409245" InitialHeight="123.83358534999" TextblockHeight="20" backgrouund="#FFB9F9E1">
      <Models ModelGuid="3359b0d1-ce0f-4c6b-b258-e0917ec8cf98" />
      <Models ModelGuid="0cf9be23-768e-4171-bbbc-03183b6743fa" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="6ca82cb6-f94e-4c21-8d01-b206832715c7" annotationText="" left="1746.55205877941" top="3163.0081331594" width="262" height="139" fontSize="30" InitialTop="3209.0081331594" InitialHeight="123" TextblockHeight="36" backgrouund="#FF71C6A8">
      <Models ModelGuid="84fbaafa-849d-486c-b9d8-2c8fb4df6076" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="bdf30c99-7edd-4771-8c9c-422a3aa097eb" annotationText="" left="1156.35667551617" top="2575.55980654119" width="290" height="191" fontSize="30" InitialTop="2621.55980654119" InitialHeight="175" TextblockHeight="36" backgrouund="#FF48B9FF">
      <Models ModelGuid="b2b3e25f-0c50-4767-9ac0-f837e8620470" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="1ced1185-6adb-4a63-8a36-4c1341a8bb7b" annotationText="" left="2416.59568417896" top="2970.41389747665" width="283" height="165" fontSize="30" InitialTop="3016.41389747665" InitialHeight="149" TextblockHeight="36" backgrouund="#FFB9F9E1">
      <Models ModelGuid="01eaf907-eb44-45b7-973d-d20cb566e2c7" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="ed6c0af5-05ed-4bad-98eb-b0abb03d1053" annotationText="" left="797.439941469706" top="2553.3695660305" width="217" height="139" fontSize="30" InitialTop="2599.3695660305" InitialHeight="123" TextblockHeight="36" backgrouund="#FFC1D676">
      <Models ModelGuid="461bb3d0-34c2-4cc4-887d-b5d28d54cf7d" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="6c5f6d21-0ac7-4ca2-93b1-e332668e1945" annotationText="Parameters name from language" left="-293.665230592624" top="2555.73325147907" width="237" height="175" fontSize="30" InitialTop="2637.73325147907" InitialHeight="123" TextblockHeight="72" backgrouund="#FFFFAA45">
      <Models ModelGuid="69c9997e-9499-422c-a075-41bcdc4e84d4" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="246e7fd6-73ee-470d-9bf2-181dfc5834cb" annotationText="элементы внутри групп" left="-494.100715552504" top="2517.77599209978" width="144" height="211" fontSize="30" InitialTop="2635.77599209978" InitialHeight="123" TextblockHeight="108" backgrouund="#FFBB87C6">
      <Models ModelGuid="d2ac6ab2-846a-49e9-9501-ce2ad277d9e3" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="31d233a4-ad10-49e0-ad2e-f4d8dd50a0d0" annotationText="" left="-159.457762429799" top="3477.46642224345" width="1628.69217283" height="332.01176412744" fontSize="30" InitialTop="3523.46642224345" InitialHeight="237.51461449645" TextblockHeight="36" backgrouund="#FFD4B6DB">
      <Models ModelGuid="07bdd7a1-197b-4bbd-9297-9e8420d6c341" />
      <Models ModelGuid="2612e793-7fd2-4590-849b-124d5022d48a" />
      <Models ModelGuid="ee29e8ce-d5b7-4c6a-ab52-2b486572e603" />
      <Models ModelGuid="611942e1-f523-4003-a05e-f24aa31a72bd" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="35215849-3340-45ff-ab8b-63031844729a" annotationText="" left="40.3374986571464" top="2588.82826804956" width="144" height="139" fontSize="30" InitialTop="2634.82826804956" InitialHeight="123" TextblockHeight="36" backgrouund="#FFBB87C6">
      <Models ModelGuid="337cb8b9-e98d-4c1a-90f5-dfdb6079c8c9" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="e61bed87-ea88-4409-895c-1e67f3f421ed" annotationText="" left="43.4214217961564" top="2416.20901828976" width="144" height="139" fontSize="30" InitialTop="2462.20901828976" InitialHeight="123" TextblockHeight="36" backgrouund="#FFBB87C6">
      <Models ModelGuid="f014462e-a371-49af-9959-68286dcb7fe3" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="446eb0ed-a326-4ada-b7bf-6bfc0167b20d" annotationText="" left="-3.66519483158368" top="2941.13335376289" width="186" height="139" fontSize="30" InitialTop="2987.13335376289" InitialHeight="123" TextblockHeight="36" backgrouund="#FFBB87C6">
      <Models ModelGuid="62113781-0a22-470f-88de-04dacd0d48c2" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="ef722862-8ea9-484c-89eb-fe5b03b40129" annotationText="" left="219.503278550406" top="2437.63468280345" width="414" height="268.1878036749" fontSize="30" InitialTop="2483.63468280345" InitialHeight="252.1878036749" TextblockHeight="36" backgrouund="#FFFF7BAC">
      <Models ModelGuid="467c2534-aaab-4cec-b933-1292a99ea74f" />
      <Models ModelGuid="10c200b0-109a-42fd-a5a0-f836bf180411" />
      <Models ModelGuid="03bc091c-561f-4ef7-9151-49fb4b74604b" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="13afda6c-152a-4016-8804-25c779cce80c" annotationText="" left="38.3737705152064" top="3129.53064710591" width="144" height="139" fontSize="30" InitialTop="3175.53064710591" InitialHeight="123" TextblockHeight="36" backgrouund="#FFBB87C6">
      <Models ModelGuid="7e5ff7e7-32e2-4113-bd6f-a8d6e1cc35e3" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="020d8e11-121f-4141-9704-bcee56befb19" annotationText="" left="227.000503372436" top="2947.58931689413" width="144" height="139" fontSize="30" InitialTop="2993.58931689413" InitialHeight="123" TextblockHeight="36" backgrouund="#FFBB87C6">
      <Models ModelGuid="9806f6f4-19ef-4763-aa2c-9e9fd5526a27" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="ebb8593b-ee20-4adc-b5ca-97237d31259b" annotationText="" left="1544.2241305024" top="2514.34113520252" width="238.66271879895" height="203.15756249172" fontSize="30" InitialTop="2560.34113520252" InitialHeight="187.15756249172" TextblockHeight="36" backgrouund="#FFFF7BAC">
      <Models ModelGuid="d455c978-6e3e-4f98-8525-f40941d42b68" />
      <Models ModelGuid="a4980370-91ce-47ba-ab99-4b4c355d508c" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="d354d4e2-f5d0-4ffb-8bdd-c2882710b05e" annotationText="" left="1877.33074752912" top="2483.84574335924" width="416" height="165" fontSize="30" InitialTop="2529.84574335924" InitialHeight="149" TextblockHeight="36" backgrouund="#FFBB87C6">
      <Models ModelGuid="489f88df-5ef5-42e4-bc2b-a8cd1fe7fa80" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="02b07028-8518-4b99-9fc7-7142fc71492b" annotationText="Get Revit Selection:" left="1115.03301863227" top="2997.42789707269" width="414.81992426725" height="123.83358534999" fontSize="14" InitialTop="3027.42789707269" InitialHeight="123.83358534999" TextblockHeight="20" backgrouund="#FFB9F9E1">
      <Models ModelGuid="36453f34-0f59-498a-bd18-e9cb130de834" />
      <Models ModelGuid="dc82912f-3990-41b4-ac46-75ffd86754e1" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="765eda78-58f2-4c27-a470-cd41c66bebd0" annotationText="Get Revit Selection:" left="-178.19668441642" top="4044.71244086624" width="502.362788990188" height="131.89339961923" fontSize="14" InitialTop="4074.71244086624" InitialHeight="123.83358534999" TextblockHeight="20" backgrouund="#FFB9F9E1">
      <Models ModelGuid="1dbbd61b-7683-4f23-945a-6effcb82804d" />
      <Models ModelGuid="2e71bb10-2ab5-4ae4-bc36-6b6564f0a098" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="e37f4ee8-aef4-4612-8a32-615b15581851" annotationText="" left="-210.207793122934" top="3846.18053526872" width="540.2946704667" height="140.67006052642" fontSize="30" InitialTop="3892.18053526872" InitialHeight="124.67006052642" TextblockHeight="36" backgrouund="#FFD4B6DB">
      <Models ModelGuid="1b710c4b-e4f6-44af-b473-59067f993681" />
      <Models ModelGuid="825334e2-48f8-4408-a548-95ee84f4d968" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Фоновый просмотр" eyeX="-22.8571014404297" eyeY="24.7618598937988" eyeZ="110.47599029541" lookX="22.8571014404297" lookY="-24.7618598937988" lookZ="-110.47599029541" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>